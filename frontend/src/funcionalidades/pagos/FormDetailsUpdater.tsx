import { useFormikContext } from "formik";
import { useEffect } from "react";
import type { ConsolidatedDetail } from "../../hooks/useConsolidatedPayments";
import { CobranzasFormValues } from "../../types/types";

interface FormDetailsUpdaterProps {
    consolidated: ConsolidatedDetail[];
}

const FormDetailsUpdater: React.FC<FormDetailsUpdaterProps> = ({ consolidated }) => {
    const { values, setFieldValue } = useFormikContext<CobranzasFormValues>();
    useEffect(() => {
        // Se conservan los detalles manuales (autoGenerated === false)
        const manualDetails = values.detallePagos.filter((detalle) => !detalle.autoGenerated);
        // Fusionamos los manuales con los consolidados (que se pasan ya calculados)
        const mergedDetails = [...manualDetails, ...consolidated];
        if (JSON.stringify(mergedDetails) !== JSON.stringify(values.detallePagos)) {
            setFieldValue("detallePagos", mergedDetails);
        }
    }, [consolidated, setFieldValue, values.detallePagos]);
    return null;
};
